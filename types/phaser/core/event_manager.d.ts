export default class _default {
    constructor(sprite: any);
    parent: any;
    _onAddedToGroup: Signal | null;
    _onRemovedFromGroup: Signal | null;
    _onDestroy: Signal | null;
    _onOutOfBounds: Signal | null;
    _onEnterBounds: Signal | null;
    _onInputOver: Signal | null;
    _onInputOut: Signal | null;
    _onInputDown: Signal | null;
    _onInputUp: Signal | null;
    _onDragStart: Signal | null;
    _onDragUpdate: Signal | null;
    _onDragStop: Signal | null;
    _onAnimationStart: Signal | null;
    _onAnimationComplete: Signal | null;
    _onAnimationLoop: Signal | null;
    destroy(): void;
    _parent: any;
    get onAddedToGroup(): Signal;
    onAddedToGroup$dispatch(...args: any[]): void;
    get onRemovedFromGroup(): Signal;
    onRemovedFromGroup$dispatch(...args: any[]): void;
    get onDestroy(): Signal;
    onDestroy$dispatch(...args: any[]): void;
    get onOutOfBounds(): Signal;
    onOutOfBounds$dispatch(...args: any[]): void;
    get onEnterBounds(): Signal;
    onEnterBounds$dispatch(...args: any[]): void;
    get onInputOver(): Signal;
    onInputOver$dispatch(...args: any[]): void;
    get onInputOut(): Signal;
    onInputOut$dispatch(...args: any[]): void;
    get onInputDown(): Signal;
    onInputDown$dispatch(...args: any[]): void;
    get onInputUp(): Signal;
    onInputUp$dispatch(...args: any[]): void;
    get onDragStart(): Signal;
    onDragStart$dispatch(...args: any[]): void;
    get onDragUpdate(): Signal;
    onDragUpdate$dispatch(...args: any[]): void;
    get onDragStop(): Signal;
    onDragStop$dispatch(...args: any[]): void;
    get onAnimationStart(): Signal;
    onAnimationStart$dispatch(...args: any[]): void;
    get onAnimationComplete(): Signal;
    onAnimationComplete$dispatch(...args: any[]): void;
    get onAnimationLoop(): Signal;
    onAnimationLoop$dispatch(...args: any[]): void;
}
import { Signal } from './signal';
//# sourceMappingURL=event_manager.d.ts.map